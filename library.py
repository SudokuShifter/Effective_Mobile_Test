import json

from book import Book


class Library:
    """
    –ö–ª–∞—Å—Å Library –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–Ω–∏–≥ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –ø–µ—Ä–µ–Ω–æ—Å–æ–º –≤ json-—Ñ–∞–π–ª –ø—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã.
    –í –∫–ª–∞—Å—Å–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –∫–Ω–∏–≥–∞–º–∏, —Ç–∞–∫–∏–µ –∫–∞–∫: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞, –ø–æ–ª—É—á–µ–Ω–∏–µ
    """

    def __init__(self):
        """
        –ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ __init__ —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∞—Ö.
        –ü—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –≤ dump –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—é–¥–∞.
        –¢–∞–∫ –∂–µ —Ç—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –º–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è id –∫–Ω–∏–≥–∏, —á—Ç–æ–±—ã –æ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –µ—ë —Å–æ–∑–¥–∞–Ω–∏–∏.
        """
        self.books = [] if not Library.load_from_file('library') \
            else Library.load_from_file('library')
        self.next_book_id = 0 if not self.books else self.books[-1].book_id + 1


    def add_book(self, title: str, author: str, year: int):
        """
        –ú–µ—Ç–æ–¥ add_book –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏.
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: title, author, year.
        –í–Ω—É—Ç—Ä–∏ —Å–µ–±—è –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—É–ø–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ–∑–¥–∞—ë—Ç –∫–Ω–∏–≥—É,
        –ª–∏–±–æ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
        """
        if not self.check_unique_title(title):

            if 0 < year <= 2024:
                book_for_append = Book(self.next_book_id, title, author, year)
                self.books.append(book_for_append)
                self.next_book_id += 1
                print(f"{'*' * 20}\n‚úÖ –ö–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n"
                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–ê–≤—Ç–æ—Ä: {author}\n–ì–æ–¥ –∏–∑–¥–∞–Ω–∏—è: {year}\n{'*' * 20}")

            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: –ì–æ–¥ —É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 2024).")

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ö–Ω–∏–≥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º \"{title}\" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. "
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")


    def delete_book(self, book_id: int):
        """
        –ú–µ—Ç–æ–¥ delete_book —É–¥–∞–ª—è–µ—Ç –∫–Ω–∏–≥—É –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É id.
        –ï—Å–ª–∏ id —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ –∫–Ω–∏–≥–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞.
        –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        """
        book = self.get_book(book_id)

        if book:
            self.books.remove(book)
            print(f"{'*' * 20}\nüóëÔ∏è –ö–Ω–∏–≥–∞ —Å ID {book_id} —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n{'*' * 20}")

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ö–Ω–∏–≥–∞ —Å ID {book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")


    def get_book(self, book_id: int):
        """
        –ú–µ—Ç–æ–¥ get_book –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É id.
        –ï—Å–ª–∏ –∫–Ω–∏–≥–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–∏–≥—É.
        –ï—Å–ª–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None
        """
        if self.books:
            return next((book for book in self.books if book.book_id == book_id), None)


    def get_books(self):
        """
        –ú–µ—Ç–æ–¥ get_books –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–∏–≥–∏.
        –ï—Å–ª–∏ –∫–Ω–∏–≥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–Ω–∏–≥–∏.
        –ï—Å–ª–∏ –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        """
        if not self.books:
            print(f"{'*' * 20}\nüìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—É—Å—Ç–∞.\n{'*' * 20}")

        else:
            print(f"{'*' * 20}\nüìö –í—Å–µ –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ:\n")

            for book in self.books:
                print(
                    f"ID: {book.book_id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {book.title}\n–ê–≤—Ç–æ—Ä: {book.author}\n–ì–æ–¥: {book.year}\n–°—Ç–∞—Ç—É—Å: {book.status}\n{'-' * 20}")
            print(f"{'*' * 20}")


    def change_status_book(self, book_id: int, status: str):
        """
        –ú–µ—Ç–æ–¥ change_status_book –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏.
        –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤ entrypoint
        """
        book = self.get_book(book_id)

        if book:
            book.status = status
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏ —Å ID {book_id} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ \"{status}\".")

        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ö–Ω–∏–≥–∞ —Å ID {book_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")


    def check_unique_title(self, title: str):
        """
        –ú–µ—Ç–æ–¥ check_unique_title –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏.
        –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None.
        –ï—Å–ª–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–∏–≥—É
        """
        if self.books:
            return next((book for book in self.books if book.title == title), None)


    def save_to_file(self, filename: str):
        """
        –ú–µ—Ç–æ–¥ save_to_file —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –≤ json-—Ñ–∞–π–ª
        """
        with open(f'{filename}.json', 'w', encoding='utf-8') as file:
            data = [book.__dict__ for book in self.books]
            json.dump(data, file, ensure_ascii=False)

        print(f"{'*' * 20}\nüíæ –î–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª \"{filename}.json\".\n{'*' * 20}")


    @staticmethod
    def load_from_file(filename: str):
        """
        –ú–µ—Ç–æ–¥ load_from_file –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≥—Ä—É–∑–∏—Ç—å –∏–∑ json-—Ñ–∞–π–ª–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–∏–≥–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –∏—Ö
        –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ —Ä–∞–±–æ—á–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ entrypoint.
        """
        try:
            with open(f'{filename}.json', 'r', encoding='utf-8') as file:
                data = json.load(file)
                print(f"{'*' * 20}\nüìÇ –î–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ \"{filename}.json\".\n{'*' * 20}")

                data_with_orm = [
                    Book(
                        book_id=book['book_id'],
                        title=book['title'],
                        author=book['author'],
                        year=book['year']
                    ) for book in data]

                return data_with_orm

        except FileNotFoundError:
            print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª \"{filename}.json\" –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞.")

        except json.decoder.JSONDecodeError:
            print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ \"{filename}.json\". –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.")
